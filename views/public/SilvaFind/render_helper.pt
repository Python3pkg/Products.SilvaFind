<tal:block
  define="
    model request/ghost_model | request/model;
    public options/public | nothing;
    title_method python: test(public, 'get_title', 'get_title_editable');
    append_to_url options/append_to_url | string:edit/tab_edit;
    " >

    <h2 class="heading"
      tal:content="model/get_title">
        Title
    </h2>
    
  <div class="criterion">
    <tal:block repeat="fieldView model/getFieldViews">
      <tal:block define="value fieldView/getStoredValue">
        <tal:block 
          condition="python:not model.isShown(fieldView.getName())">
          <tal:block define="is_tuple python: same_type(value, ('',))">
            <tal:block condition="python: is_tuple and (value[0] or value[1])">
              <span tal:content="fieldView/getTitle" /> :
              <span tal:content="python:value[0]" /> -
              <span tal:content="python:value[1]" />
            </tal:block>
            <tal:block condition="python: value and not is_tuple">
              <span tal:content="fieldView/getTitle" /> :
              <span tal:content="value" />
            </tal:block>
          </tal:block>
        </tal:block>
      </tal:block>
    </tal:block>
  </div>

  <div class="form" tal:condition="model/isFormNeeded">
    <form tal:attributes="action model/absolute_url">
      <table>
        <tbody>
          <tr tal:repeat="fieldView model/getPublicFieldViews">
            <td tal:content="fieldView/getTitle">
              A search object.
            </td>
            <td tal:content="structure fieldView/renderPublicWidget">
              A search object.
            </td>
          </tr>
          <tr>
            <td colspan="2"><input type="submit" value="Search" /></td>
          </tr>
        </tbody>
      </table>  
    </form>
  </div>

  <p class="searchResults">
    Search Results
  </p>

  <table tal:define="results python:model.searchResults(request);
                     columnIds model/getResultsColumnIds;
                     columnTitles model/getResultsColumnTitles;
                     batch python:template.getBatch(results);">
    <thead>
      <tr class="controls">
        <td class="rowhead" align="left">
          <tal:block condition="request/previous_batch_url | nothing">
            [<a href="previousbatch" tal:attributes="href request/previous_batch_url" i18n:translate="">
            &lt;&lt; Previous
            </a>]
          </tal:block>
        </td>
        <td class="rowhead" nowrap="1" i18n:translate="">
          Showing results
          <tal:block replace="batch/start" i18n:name="batch_start" />
          to
          <tal:block replace="batch/end" i18n:name="batch_end" />.
        </td>
        <td class="rowhead" align="right">
          <tal:block condition="request/next_batch_url | nothing">
            [<a href="nextbatch" tal:attributes="href request/next_batch_url" i18n:translate="">
            Next &gt;&gt;
            </a>]
          </tal:block>
        </td>
      </tr>
      <tr>
        <th tal:repeat="columnTitle columnTitles"
            tal:content="columnTitle"
            i18n:translate="">
        </th>
      </tr>
    </thead>
    <tbody>
      <tr tal:repeat="item batch" tal:condition="columnIds">
        <td><a tal:define="columnId python:columnIds[0]"
               tal:content="python: getattr(item.getObject(), columnId)() or '?'"
               tal:attributes="href item/silva_object_url">
            </a>
        <td tal:repeat="columnId python:columnIds[1:]"
            tal:content="python: getattr(item.getObject(), columnId)()">
        </td>
      </tr>
    </tbody>
  </table>  
</tal:block>
